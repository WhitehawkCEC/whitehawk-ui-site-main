import{aU as M,aG as T,aV as C,c as o,c0 as R,a_ as d,cA as A,cB as b}from"./index.c4c42ec2.js";const g="active-questionnaire",L=M(g,()=>{const m=T(),E=C(`${g}.chosenQuestionnaireId`,null,{deep:!1,serializer:b.string}),f=o({get(){return E.value||m.mainQuestionnaireId},set(e){e&&(E.value=e)}}),Q=R.read(f),u=o(()=>Q.data.value),c=d(0),l=d(0),v=d(),x=A.list(v),S=o(()=>x.data.value||[]),y=A.create(),q=A.update(),h=d(!1),w=o(()=>{var t;const e=new Map;return(t=u.value)==null||t.sections.forEach(s=>{const a=[];if(s.questions.forEach(n=>{n.answerSet&&n.answerSet.answers&&n.answerSet.answers.forEach(r=>{var i,I;((i=r.id)==null?void 0:i.value)===((I=n.id)==null?void 0:I.value)&&a.push(r.riskScore)})}),s.id){const n=a.reduce((r,i)=>r+i,0);e.has(s.id.value)||e.set(s.id.value,n)}}),e}),p=o(()=>{var t;const e=new Map;return(t=u.value)==null||t.sections.forEach(s=>{const a=[];if(s.questions.forEach(n=>{n.answerSet&&n.answerSet.answers.forEach(r=>a.push(r.riskScore))}),s.id){const n=a.reduce((r,i)=>r+i,0);e.has(s.id.value)||e.set(s.id.value,n)}}),e}),k=o(()=>{var e;return(e=u.value)==null?void 0:e.sections[c.value]});return{questionnaireId:f,questionnaire:u,sectionIndex:c,questionIndex:l,takenId:v,answers:S,atResults:h,sectionTotals:w,sectionMaxes:p,currentSection:k,currentQuestion:o(()=>{var e;return(e=k.value)==null?void 0:e.questions[l.value]}),totalSections:o(()=>{var e;return(e=u.value)==null?void 0:e.sections.length}),totalQuestions:o(()=>{var t;const e=[];return(t=u.value)==null||t.sections.forEach(s=>{e.push(s.questions.length)}),e.reduce((s,a)=>s+a,0)}),riskScoreTotal:o(()=>{let e=0;return S.value.forEach(t=>{Array.isArray(t)&&t.forEach(s=>{s.riskScore&&(e=e+s.riskScore)}),e=e+t.riskScore}),e}),riskScoreMax:o(()=>{var t;let e=0;return(t=u.value)==null||t.sections.forEach(s=>{s.questions.forEach(a=>{a.answerSet&&a.answerSet.answers.forEach(r=>e=e+r.riskScore)})}),e}),sectionTotal(e){return w.value.get(e)||0},sectionMax(e){return p.value.get(e)||0},sectionPercentage(e){const t=w.value.get(e)||0,s=p.value.get(e)||0;return Math.round(t*100/s)},questionScore(e){let t=0;return S.value.forEach(s=>{var a;((a=s.questionId)==null?void 0:a.value)===e&&(t=t+s.riskScore)}),t},setSectionIndex(e){c.value=e},setQuestionIndex(e){l.value=e},setQuestionnaireId(e){f.value=e},setTakenId(e){v.value=e},async createAnswer(e){if(!e)throw new Error("Answer is undefined.");await y.mutateAsync(e)},async updateAnswer(e){await q.mutateAsync(e)},setAtResults(e){h.value=e},clearData(){c.value=0,l.value=0,v.value=void 0,h.value=!1}}});export{L as u};
