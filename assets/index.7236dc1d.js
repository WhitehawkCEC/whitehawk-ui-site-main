import{F as g}from"./FormButton.7c0cd284.js";import{b0 as I,ay as b,c as i,n as K,b$ as E,cK as f,cU as C,cL as k,cV as x,aF as B}from"./index.3b2e4c93.js";import{A as S}from"./ApiKeyInput.e227bf74.js";import{s as A}from"./index.007639aa.js";import"./arrow-down-on-square.bf61cdc5.js";import"./trash.78f57a7a.js";import"./ApiKeyValidation.dcb827df.js";const c={};c.props={value:{key:"value",required:!1,type:null},entities:{key:"entities",required:!0,type:Array},ecosystems:{key:"ecosystems",required:!0,type:Array}};c.setup=(e,n)=>{const t=e,a=n.emit,o=b(t,a),r=i({get(){var p;const s=(p=t.value)==null?void 0:p.apiKeyMaybe;if((s==null?void 0:s.oneofKind)==="apiKey")return s.apiKey},set(s){s?o.value.apiKeyMaybe={oneofKind:"apiKey",apiKey:s}:o.value.apiKeyMaybe={oneofKind:void 0}}}),u=i(()=>t.entities.map(s=>({text:s.name,value:s.id}))),m=i(()=>t.ecosystems.map(s=>({text:s.name,value:s.id}))),y=i({get(){var s;return(s=t.value)==null?void 0:s.mappedEntityId},set(s){s&&(o.value.mappedEntityId=s)}}),d=i({get(){var s;return(s=t.value)==null?void 0:s.mappedEcosystemId},set(s){s&&(o.value.mappedEcosystemId=s)}});return{apiKey:r,entityOptions:u,ecosystemOptions:m,mappedEntityId:y,mappedEcosystemId:d}};c.components=Object.assign({ApiKeyInput:S,SimpleSelect:I},c.components);var h=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"space-y-8"},[t("BaseLabel",{staticClass:"space-y-1"},[t("span",[e._v("API Key:")]),t("ApiKeyInput",{model:{value:e.apiKey,callback:function(a){e.apiKey=a},expression:"apiKey"}})],1),t("BaseLabel",{staticClass:"space-y-1"},[t("span",[e._v("Mapped Ecosystem:")]),t("SimpleSelect",{staticClass:"w-full",attrs:{options:e.ecosystemOptions},model:{value:e.mappedEcosystemId,callback:function(a){e.mappedEcosystemId=a},expression:"mappedEcosystemId"}})],1),t("BaseLabel",{staticClass:"space-y-1"},[t("span",[e._v("Mapped Entity:")]),t("SimpleSelect",{staticClass:"w-full",attrs:{options:e.entityOptions},model:{value:e.mappedEntityId,callback:function(a){e.mappedEntityId=a},expression:"mappedEntityId"}})],1)],1)},$=[];const v={};var M=K(c,h,$,!1,O,null,null,null);function O(e){for(let n in v)this[n]=v[n]}const F=function(){return M.exports}(),l={};l.setup=(e,n)=>{const t=E("id"),a=f.get(t),o=A(i(()=>a.data.value||C.create())),r=k.list(t),u=i(()=>r.data.value||[]),m=x.list(t),y=i(()=>m.data.value||[]),d=B(),s=f.set(t);async function p(){await s.mutateAsync(o.value),d.success("Successfully updated config.")}return{config:o,entities:u,ecosystems:y,submit:p}};l.components=Object.assign({BlackKiteConfigInput:F,FormButton:g},l.components);var L=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("BaseSimpleCard",{staticClass:"divide-y"},[t("BaseTypography",{staticClass:"block p-4",attrs:{variant:"subtitle3"}},[e._v(" Configure Black Kite ")]),t("form",{staticClass:"divide-y",on:{submit:function(a){return a.preventDefault(),e.submit.apply(null,arguments)}}},[t("div",{staticClass:"p-4"},[t("BlackKiteConfigInput",{attrs:{entities:e.entities,ecosystems:e.ecosystems},model:{value:e.config,callback:function(a){e.config=a},expression:"config"}})],1),t("FormButton",{attrs:{action:"save"}})],1)],1)},j=[];const _={};var R=K(l,L,j,!1,q,null,null,null);function q(e){for(let n in _)this[n]=_[n]}const U=function(){return R.exports}();export{U as default};
