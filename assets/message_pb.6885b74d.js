import{cf as k,ch as M,ce as W}from"./index.765bdb5f.js";var B={};(function(l){Object.defineProperty(l,"__esModule",{value:!0}),l.LicenseUsage=l.LicenseTypeMapLicenseUsage=l.LicenseTypeMapQuantities=l.LicenseBatchUsage=l.AggregateLicenseUsage=void 0;const o=k,d=k,g=k,h=k,T=k,w=M,f=W;class m extends T.MessageType{constructor(){super("whitehawk.proto.scorecard_licensing.v1.AggregateLicenseUsage",[{no:1,name:"annual",kind:"message",T:()=>l.LicenseUsage},{no:2,name:"one_time",kind:"message",T:()=>l.LicenseUsage},{no:3,name:"validity",kind:"message",oneof:"validityMaybe",T:()=>f.DateRange}])}create(e){const n={validityMaybe:{oneofKind:void 0}};return globalThis.Object.defineProperty(n,h.MESSAGE_TYPE,{enumerable:!1,value:this}),e!==void 0&&(0,g.reflectionMergePartial)(this,n,e),n}internalBinaryRead(e,n,a,i){let t=i!=null?i:this.create(),y=e.pos+n;for(;e.pos<y;){let[r,c]=e.tag();switch(r){case 1:t.annual=l.LicenseUsage.internalBinaryRead(e,e.uint32(),a,t.annual);break;case 2:t.oneTime=l.LicenseUsage.internalBinaryRead(e,e.uint32(),a,t.oneTime);break;case 3:t.validityMaybe={oneofKind:"validity",validity:f.DateRange.internalBinaryRead(e,e.uint32(),a,t.validityMaybe.validity)};break;default:let s=a.readUnknownField;if(s==="throw")throw new globalThis.Error(`Unknown field ${r} (wire type ${c}) for ${this.typeName}`);let u=e.skip(c);s!==!1&&(s===!0?d.UnknownFieldHandler.onRead:s)(this.typeName,t,r,c,u)}}return t}internalBinaryWrite(e,n,a){e.annual&&l.LicenseUsage.internalBinaryWrite(e.annual,n.tag(1,o.WireType.LengthDelimited).fork(),a).join(),e.oneTime&&l.LicenseUsage.internalBinaryWrite(e.oneTime,n.tag(2,o.WireType.LengthDelimited).fork(),a).join(),e.validityMaybe.oneofKind==="validity"&&f.DateRange.internalBinaryWrite(e.validityMaybe.validity,n.tag(3,o.WireType.LengthDelimited).fork(),a).join();let i=a.writeUnknownFields;return i!==!1&&(i==!0?d.UnknownFieldHandler.onWrite:i)(this.typeName,e,n),n}}l.AggregateLicenseUsage=new m;class U extends T.MessageType{constructor(){super("whitehawk.proto.scorecard_licensing.v1.LicenseBatchUsage",[{no:1,name:"id",kind:"message",T:()=>w.Ulid},{no:2,name:"validity",kind:"message",T:()=>f.DateRange},{no:3,name:"counts",kind:"message",T:()=>l.LicenseTypeMapLicenseUsage}])}create(e){const n={};return globalThis.Object.defineProperty(n,h.MESSAGE_TYPE,{enumerable:!1,value:this}),e!==void 0&&(0,g.reflectionMergePartial)(this,n,e),n}internalBinaryRead(e,n,a,i){let t=i!=null?i:this.create(),y=e.pos+n;for(;e.pos<y;){let[r,c]=e.tag();switch(r){case 1:t.id=w.Ulid.internalBinaryRead(e,e.uint32(),a,t.id);break;case 2:t.validity=f.DateRange.internalBinaryRead(e,e.uint32(),a,t.validity);break;case 3:t.counts=l.LicenseTypeMapLicenseUsage.internalBinaryRead(e,e.uint32(),a,t.counts);break;default:let s=a.readUnknownField;if(s==="throw")throw new globalThis.Error(`Unknown field ${r} (wire type ${c}) for ${this.typeName}`);let u=e.skip(c);s!==!1&&(s===!0?d.UnknownFieldHandler.onRead:s)(this.typeName,t,r,c,u)}}return t}internalBinaryWrite(e,n,a){e.id&&w.Ulid.internalBinaryWrite(e.id,n.tag(1,o.WireType.LengthDelimited).fork(),a).join(),e.validity&&f.DateRange.internalBinaryWrite(e.validity,n.tag(2,o.WireType.LengthDelimited).fork(),a).join(),e.counts&&l.LicenseTypeMapLicenseUsage.internalBinaryWrite(e.counts,n.tag(3,o.WireType.LengthDelimited).fork(),a).join();let i=a.writeUnknownFields;return i!==!1&&(i==!0?d.UnknownFieldHandler.onWrite:i)(this.typeName,e,n),n}}l.LicenseBatchUsage=new U;class b extends T.MessageType{constructor(){super("whitehawk.proto.scorecard_licensing.v1.LicenseTypeMapQuantities",[{no:1,name:"annual",kind:"scalar",T:5},{no:2,name:"one_time",kind:"scalar",T:5}])}create(e){const n={annual:0,oneTime:0};return globalThis.Object.defineProperty(n,h.MESSAGE_TYPE,{enumerable:!1,value:this}),e!==void 0&&(0,g.reflectionMergePartial)(this,n,e),n}internalBinaryRead(e,n,a,i){let t=i!=null?i:this.create(),y=e.pos+n;for(;e.pos<y;){let[r,c]=e.tag();switch(r){case 1:t.annual=e.int32();break;case 2:t.oneTime=e.int32();break;default:let s=a.readUnknownField;if(s==="throw")throw new globalThis.Error(`Unknown field ${r} (wire type ${c}) for ${this.typeName}`);let u=e.skip(c);s!==!1&&(s===!0?d.UnknownFieldHandler.onRead:s)(this.typeName,t,r,c,u)}}return t}internalBinaryWrite(e,n,a){e.annual!==0&&n.tag(1,o.WireType.Varint).int32(e.annual),e.oneTime!==0&&n.tag(2,o.WireType.Varint).int32(e.oneTime);let i=a.writeUnknownFields;return i!==!1&&(i==!0?d.UnknownFieldHandler.onWrite:i)(this.typeName,e,n),n}}l.LicenseTypeMapQuantities=new b;class L extends T.MessageType{constructor(){super("whitehawk.proto.scorecard_licensing.v1.LicenseTypeMapLicenseUsage",[{no:1,name:"annual",kind:"message",T:()=>l.LicenseUsage},{no:2,name:"one_time",kind:"message",T:()=>l.LicenseUsage}])}create(e){const n={};return globalThis.Object.defineProperty(n,h.MESSAGE_TYPE,{enumerable:!1,value:this}),e!==void 0&&(0,g.reflectionMergePartial)(this,n,e),n}internalBinaryRead(e,n,a,i){let t=i!=null?i:this.create(),y=e.pos+n;for(;e.pos<y;){let[r,c]=e.tag();switch(r){case 1:t.annual=l.LicenseUsage.internalBinaryRead(e,e.uint32(),a,t.annual);break;case 2:t.oneTime=l.LicenseUsage.internalBinaryRead(e,e.uint32(),a,t.oneTime);break;default:let s=a.readUnknownField;if(s==="throw")throw new globalThis.Error(`Unknown field ${r} (wire type ${c}) for ${this.typeName}`);let u=e.skip(c);s!==!1&&(s===!0?d.UnknownFieldHandler.onRead:s)(this.typeName,t,r,c,u)}}return t}internalBinaryWrite(e,n,a){e.annual&&l.LicenseUsage.internalBinaryWrite(e.annual,n.tag(1,o.WireType.LengthDelimited).fork(),a).join(),e.oneTime&&l.LicenseUsage.internalBinaryWrite(e.oneTime,n.tag(2,o.WireType.LengthDelimited).fork(),a).join();let i=a.writeUnknownFields;return i!==!1&&(i==!0?d.UnknownFieldHandler.onWrite:i)(this.typeName,e,n),n}}l.LicenseTypeMapLicenseUsage=new L;class v extends T.MessageType{constructor(){super("whitehawk.proto.scorecard_licensing.v1.LicenseUsage",[{no:1,name:"quantity",kind:"scalar",T:5},{no:2,name:"available",kind:"scalar",T:5},{no:3,name:"used",kind:"scalar",T:5}])}create(e){const n={quantity:0,available:0,used:0};return globalThis.Object.defineProperty(n,h.MESSAGE_TYPE,{enumerable:!1,value:this}),e!==void 0&&(0,g.reflectionMergePartial)(this,n,e),n}internalBinaryRead(e,n,a,i){let t=i!=null?i:this.create(),y=e.pos+n;for(;e.pos<y;){let[r,c]=e.tag();switch(r){case 1:t.quantity=e.int32();break;case 2:t.available=e.int32();break;case 3:t.used=e.int32();break;default:let s=a.readUnknownField;if(s==="throw")throw new globalThis.Error(`Unknown field ${r} (wire type ${c}) for ${this.typeName}`);let u=e.skip(c);s!==!1&&(s===!0?d.UnknownFieldHandler.onRead:s)(this.typeName,t,r,c,u)}}return t}internalBinaryWrite(e,n,a){e.quantity!==0&&n.tag(1,o.WireType.Varint).int32(e.quantity),e.available!==0&&n.tag(2,o.WireType.Varint).int32(e.available),e.used!==0&&n.tag(3,o.WireType.Varint).int32(e.used);let i=a.writeUnknownFields;return i!==!1&&(i==!0?d.UnknownFieldHandler.onWrite:i)(this.typeName,e,n),n}}l.LicenseUsage=new v})(B);export{B as m};
