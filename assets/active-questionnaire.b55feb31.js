import{aU as q,aG as M,c as n,aV as T,c0 as C,cA as y,a_ as m,cB as L,cC as R}from"./index.51cd6e30.js";import{s as b}from"./index.77e94ccb.js";const w="active-questionnaire",B=q(w,()=>{const k=M(),g=n(()=>{var e;return(e=k.company)==null?void 0:e.id}),p=T(`${w}.chosenQuestionnaireId`,null,{deep:!1,serializer:R.string}),c=n({get(){return p.value||k.mainQuestionnaireId},set(e){e&&(p.value=e)}}),Q=C.read(c),i=n(()=>Q.data.value),x=y.list(g),l=b(n(()=>{var e,a,s;return(s=(a=(e=x.data.value)==null?void 0:e.find(t=>{var o;return((o=t.questionnaireId)==null?void 0:o.value)===c.value}))==null?void 0:a.id)==null?void 0:s.value})),v=m(0),d=m(0),A=L.list(l),f=n(()=>A.data.value||[]),h=n(()=>{var a;const e=new Map;return(a=i.value)==null||a.sections.forEach(s=>{const t=[];if(s.questions.forEach(o=>{o.answerSet&&o.answerSet.answers&&o.answerSet.answers.forEach(r=>{var u,I;((u=r.id)==null?void 0:u.value)===((I=o.id)==null?void 0:I.value)&&t.push(r.riskScore)})}),s.id){const o=t.reduce((r,u)=>r+u,0);e.has(s.id.value)||e.set(s.id.value,o)}}),e}),S=n(()=>{var a;const e=new Map;return(a=i.value)==null||a.sections.forEach(s=>{const t=[];if(s.questions.forEach(o=>{o.answerSet&&o.answerSet.answers.forEach(r=>t.push(r.riskScore))}),s.id){const o=t.reduce((r,u)=>r+u,0);e.has(s.id.value)||e.set(s.id.value,o)}}),e}),E=n(()=>{var e;return(e=i.value)==null?void 0:e.sections[v.value]});return{questionnaireId:c,questionnaire:i,sectionIndex:v,questionIndex:d,takenId:l,answers:f,sectionTotals:h,sectionMaxes:S,currentSection:E,currentQuestion:n(()=>{var e;return(e=E.value)==null?void 0:e.questions[d.value]}),totalSections:n(()=>{var e;return(e=i.value)==null?void 0:e.sections.length}),totalQuestions:n(()=>{var a;const e=[];return(a=i.value)==null||a.sections.forEach(s=>{e.push(s.questions.length)}),e.reduce((s,t)=>s+t,0)}),riskScoreTotal:n(()=>{let e=0;return f.value.forEach(a=>{Array.isArray(a)&&a.forEach(s=>{s.riskScore&&(e=e+s.riskScore)}),e=e+a.riskScore}),e}),riskScoreMax:n(()=>{var a;let e=0;return(a=i.value)==null||a.sections.forEach(s=>{s.questions.forEach(t=>{t.answerSet&&t.answerSet.answers.forEach(r=>e=e+r.riskScore)})}),e}),sectionTotal(e){return h.value.get(e)||0},sectionMax(e){return S.value.get(e)||0},sectionPercentage(e){const a=h.value.get(e)||0,s=S.value.get(e)||0;return Math.round(a*100/s)},questionScore(e){let a=0;return f.value.forEach(s=>{var t;((t=s.questionId)==null?void 0:t.value)===e&&(a=a+s.riskScore)}),a},setSectionIndex(e){v.value=e},setQuestionIndex(e){d.value=e},setQuestionnaireId(e){c.value=e},setTakenId(e){l.value=e},clearData(){v.value=0,d.value=0,c.value=void 0,l.value=void 0}}});export{B as u};
